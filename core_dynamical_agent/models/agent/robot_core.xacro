<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >
    <xacro:include filename="inertial_macros.xacro"/>



    <material name="bright_dark_blue">
        <color rgba="0.0 0.23 0.49 1"/>
    </material>

    <material name="med_blue">
        <color rgba="0.0 0.55 1.0 1"/> 
    </material>

    <material name="pink">
        <color rgba="1.0 0.45 0.71 1"/> 
    </material>

    <material name="purple">
        <color rgba="0.78 0.0 1.0 1"/> 
    </material>

    <material name="green">
        <color rgba="0.31 0.8 0.55 1"/> 
    </material>

    <material name="orange">
        <color rgba="1.0 0.62 0.23 1"/> 
    </material>

    <material name="yellow">
        <color rgba="0.98 0.91 0.35 1"/>
    </material>

    <material name="red">
        <color rgba="0.85 0.19 0.2 1"/> 
    </material>

    <!-- BASE LINK -->

    <link name="base_link"/>

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <link name="base_footprint"/>
    <!-- CHASSIS LINK -->

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="-${$(arg radius)} 0 0"/>
    </joint>

    <link name="chassis">
        <visual>
                <origin xyz="$(arg radius) 0 ${$(arg height)/2}"/>
                <geometry>
                <cylinder radius="$(arg radius)" length="$(arg height)"/>
                </geometry>
                <material name="bright_dark_blue"/>
            </visual>
            <collision>
                <origin xyz="$(arg radius) 0 ${$(arg height)/2}"/>
                <geometry>
                <cylinder radius="$(arg radius)" length="$(arg height)"/>
                </geometry>
            </collision>

        <xacro:inertial_cylinder mass='0.5' length="$(arg height)" radius="$(arg radius)" >
            <origin xyz="$(arg radius) 0 ${$(arg height)/2}" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="chassis">
        <collision>
        <surface>
            <contact>
                <collide_bitmask>$(arg collide_bitmask)</collide_bitmask>
            </contact>
        </surface>
        </collision>

    </gazebo>

   


    <gazebo>
         <plugin
            filename="ignition-gazebo-pose-publisher-system"
            name="ignition::gazebo::systems::PosePublisher">
            <publish_link_pose>false</publish_link_pose>
            <publish_nested_model_pose>true</publish_nested_model_pose>
            <update_frequency>10</update_frequency>

        </plugin>   
        
	<plugin filename="ignition-gazebo-velocity-control-system"
                name="ignition::gazebo::systems::VelocityControl">
            <topic>/model/$(arg name)/cmd_vel</topic>
        </plugin>
        
	  <plugin filename="ignition-gazebo-odometry-publisher-system"
                name="ignition::gazebo::systems::OdometryPublisher">
                <odom_frame>$(arg name)/odom</odom_frame>
                <robot_base_frame>$(arg name)/base_link</robot_base_frame>
                <odom_publish_frequency>10</odom_publish_frequency>
                <odom_topic>/model/$(arg name)/odometry</odom_topic>
                <odom_covariance_topic>/model/$(arg name)/odometry_with_covariance</odom_covariance_topic>
                <tf_topic>/model/$(arg name)/odometry_tf</tf_topic>
                <dimensions>3</dimensions>
                <xyz_offset>0 0 0</xyz_offset>
                <rpy_offset>0 0 0</rpy_offset>
                <gaussian_noise>0 </gaussian_noise>
            </plugin>
            
    </gazebo>
</robot>
